/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos


import java.io.Serializable
import java.time.LocalDateTime


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class Databasechangelog(
    var id: String? = null,
    var author: String? = null,
    var filename: String? = null,
    var dateexecuted: LocalDateTime? = null,
    var orderexecuted: Int? = null,
    var exectype: String? = null,
    var md5sum: String? = null,
    var description: String? = null,
    var comments: String? = null,
    var tag: String? = null,
    var liquibase: String? = null,
    var contexts: String? = null,
    var labels: String? = null,
    var deploymentId: String? = null
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Databasechangelog = other as Databasechangelog
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.author == null) {
            if (o.author != null)
                return false
        }
        else if (this.author != o.author)
            return false
        if (this.filename == null) {
            if (o.filename != null)
                return false
        }
        else if (this.filename != o.filename)
            return false
        if (this.dateexecuted == null) {
            if (o.dateexecuted != null)
                return false
        }
        else if (this.dateexecuted != o.dateexecuted)
            return false
        if (this.orderexecuted == null) {
            if (o.orderexecuted != null)
                return false
        }
        else if (this.orderexecuted != o.orderexecuted)
            return false
        if (this.exectype == null) {
            if (o.exectype != null)
                return false
        }
        else if (this.exectype != o.exectype)
            return false
        if (this.md5sum == null) {
            if (o.md5sum != null)
                return false
        }
        else if (this.md5sum != o.md5sum)
            return false
        if (this.description == null) {
            if (o.description != null)
                return false
        }
        else if (this.description != o.description)
            return false
        if (this.comments == null) {
            if (o.comments != null)
                return false
        }
        else if (this.comments != o.comments)
            return false
        if (this.tag == null) {
            if (o.tag != null)
                return false
        }
        else if (this.tag != o.tag)
            return false
        if (this.liquibase == null) {
            if (o.liquibase != null)
                return false
        }
        else if (this.liquibase != o.liquibase)
            return false
        if (this.contexts == null) {
            if (o.contexts != null)
                return false
        }
        else if (this.contexts != o.contexts)
            return false
        if (this.labels == null) {
            if (o.labels != null)
                return false
        }
        else if (this.labels != o.labels)
            return false
        if (this.deploymentId == null) {
            if (o.deploymentId != null)
                return false
        }
        else if (this.deploymentId != o.deploymentId)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + (if (this.author == null) 0 else this.author.hashCode())
        result = prime * result + (if (this.filename == null) 0 else this.filename.hashCode())
        result = prime * result + (if (this.dateexecuted == null) 0 else this.dateexecuted.hashCode())
        result = prime * result + (if (this.orderexecuted == null) 0 else this.orderexecuted.hashCode())
        result = prime * result + (if (this.exectype == null) 0 else this.exectype.hashCode())
        result = prime * result + (if (this.md5sum == null) 0 else this.md5sum.hashCode())
        result = prime * result + (if (this.description == null) 0 else this.description.hashCode())
        result = prime * result + (if (this.comments == null) 0 else this.comments.hashCode())
        result = prime * result + (if (this.tag == null) 0 else this.tag.hashCode())
        result = prime * result + (if (this.liquibase == null) 0 else this.liquibase.hashCode())
        result = prime * result + (if (this.contexts == null) 0 else this.contexts.hashCode())
        result = prime * result + (if (this.labels == null) 0 else this.labels.hashCode())
        result = prime * result + (if (this.deploymentId == null) 0 else this.deploymentId.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Databasechangelog (")

        sb.append(id)
        sb.append(", ").append(author)
        sb.append(", ").append(filename)
        sb.append(", ").append(dateexecuted)
        sb.append(", ").append(orderexecuted)
        sb.append(", ").append(exectype)
        sb.append(", ").append(md5sum)
        sb.append(", ").append(description)
        sb.append(", ").append(comments)
        sb.append(", ").append(tag)
        sb.append(", ").append(liquibase)
        sb.append(", ").append(contexts)
        sb.append(", ").append(labels)
        sb.append(", ").append(deploymentId)

        sb.append(")")
        return sb.toString()
    }
}
