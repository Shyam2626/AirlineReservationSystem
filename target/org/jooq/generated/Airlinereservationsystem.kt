/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated


import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.generated.tables.Databasechangelog
import org.jooq.generated.tables.Databasechangeloglock
import org.jooq.generated.tables.Passwordmanagement
import org.jooq.generated.tables.User
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Airlinereservationsystem : SchemaImpl("AirlineReservationSystem", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>AirlineReservationSystem</code>
         */
        val AIRLINERESERVATIONSYSTEM: Airlinereservationsystem = Airlinereservationsystem()
    }

    /**
     * The table <code>AirlineReservationSystem.DATABASECHANGELOG</code>.
     */
    val DATABASECHANGELOG: Databasechangelog get() = Databasechangelog.DATABASECHANGELOG

    /**
     * The table <code>AirlineReservationSystem.DATABASECHANGELOGLOCK</code>.
     */
    val DATABASECHANGELOGLOCK: Databasechangeloglock get() = Databasechangeloglock.DATABASECHANGELOGLOCK

    /**
     * The table <code>AirlineReservationSystem.PasswordManagement</code>.
     */
    val PASSWORDMANAGEMENT: Passwordmanagement get() = Passwordmanagement.PASSWORDMANAGEMENT

    /**
     * The table <code>AirlineReservationSystem.User</code>.
     */
    val USER: User get() = User.USER

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Databasechangelog.DATABASECHANGELOG,
        Databasechangeloglock.DATABASECHANGELOGLOCK,
        Passwordmanagement.PASSWORDMANAGEMENT,
        User.USER
    )
}
